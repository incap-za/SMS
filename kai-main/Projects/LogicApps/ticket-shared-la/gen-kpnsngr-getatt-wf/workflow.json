{
    "wfparameters": {
        "logicappName": {
            "type": "String",
            "value": "{{env}}-ticket-shared-la"
        },
        "resourceGroup": {
            "type": "String",
            "value": "{{env}}-ticket-rg"
        },
        "environment": {
            "type": "String",
            "value": "{{env}}"
        }
    },
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "ArrayLengthTest": {
              "actions": {
                "FunctionalEndpointSuccess": {
                  "actions": {
                    "AttachmentArrayResponse": {
                      "inputs": {
                        "body": "@body('RemoveCode')",
                        "headers": {
                          "AppRunlink": "@{concat('https://portal.azure.com/#view/Microsoft_Azure_EMA/DesignerEditor.ReactView/id/%2Fsubscriptions%2F', parameters('subscriptionId'),'%2FresourceGroups%2F{{resourceGroup}}%2Fproviders%2FMicrosoft.Web%2Fsites%2F{{logicappName}}%2Fworkflows%2F',workflow()?['name'],'/location/West%20Europe/isReadOnly/true/isMonitoringView/true/runId/',workflow()?['run']?['name'])}"
                        },
                        "statusCode": 200
                      },
                      "kind": "Http",
                      "runAfter": {
                        "RemoveCode": [
                          "Succeeded"
                        ]
                      },
                      "type": "Response"
                    },
                    "FilterFunctionalEndpointSuccess": {
                      "inputs": {
                        "from": "@variables('attachments')",
                        "where": "@equals(item()['code'], 'FunctionalEndpointSuccess')"
                      },
                      "runAfter": {},
                      "type": "Query"
                    },
                    "RemoveCode": {
                      "inputs": {
                        "from": "@body('FilterFunctionalEndpointSuccess')",
                        "select": {
                          "content": "@item()?['content']",
                          "content_type": "@item()?['content_type']",
                          "file_name": "@item()?['file_name']",
                          "size_bytes": "@item()?['size_bytes']"
                        }
                      },
                      "runAfter": {
                        "FilterFunctionalEndpointSuccess": [
                          "Succeeded"
                        ]
                      },
                      "type": "Select"
                    }
                  },
                  "else": {
                    "actions": {
                      "TechnicalEndpointFailure": {
                        "inputs": {
                          "body": {
                            "code": "TechnicalEndpointFailure",
                            "message": "Failed to retrieve the attachment data",
                            "reference_number": "",
                            "state": "",
                            "sys_id": "",
                            "ticket_number": ""
                          },
                          "headers": {
                            "AppRunlink": "@{concat('https://portal.azure.com/#view/Microsoft_Azure_EMA/DesignerEditor.ReactView/id/%2Fsubscriptions%2F', parameters('subscriptionId'),'%2FresourceGroups%2F{{resourceGroup}}%2Fproviders%2FMicrosoft.Web%2Fsites%2F{{logicappName}}%2Fworkflows%2F',workflow()?['name'],'/location/West%20Europe/isReadOnly/true/isMonitoringView/true/runId/',workflow()?['run']?['name'])}"
                          },
                          "statusCode": 500
                        },
                        "kind": "Http",
                        "runAfter": {},
                        "type": "Response"
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@if(contains(string(variables('attachments')),'FunctionalEndpointSuccess'), true, false)",
                          "@true"
                        ]
                      }
                    ]
                  },
                  "runAfter": {
                    "GetContentLoop": [
                      "Succeeded",
                      "Failed",
                      "TimedOut"
                    ]
                  },
                  "type": "If"
                },
                "GetContentLoop": {
                  "actions": {
                    "AppendFileContent": {
                      "inputs": {
                        "name": "attachments",
                        "value": {
                          "code": "@if(equals(outputs('GetFileContent')?['statusCode'],200),'FunctionalEndpointSuccess','TechnicalEndpointFailure')",
                          "content": "@if(contains(body('GetFileContent'), '$content'), body('GetFileContent')?['$content'],base64(body('GetFileContent')))",
                          "content_type": "@items('GetContentLoop')?['content_type']",
                          "file_name": "@items('GetContentLoop')?['file_name']",
                          "size_bytes": "@items('GetContentLoop')?['size_bytes']"
                        }
                      },
                      "runAfter": {
                        "GetFileContent": [
                          "Succeeded",
                          "Failed",
                          "TimedOut"
                        ]
                      },
                      "type": "AppendToArrayVariable"
                    },
                    "GetFileContent": {
                      "inputs": {
                        "authentication": {
                        "username": "@{parameters('serviceNowGreen')['userName']}",
                        "password": "@{parameters('serviceNowGreen')['secret']}",
                        "type": "Basic"
                        },
                        "method": "GET",
                        "retryPolicy": {
                          "type": "none"
                        },
                        "uri": "@{item()['download_link']}",
                        "headers": {
                          "Connection": "close"
                        }
                      },
                      "runAfter": {},
                      "type": "Http"
                    }
                  },
                  "foreach": "@body('SelectAttachmentProperties')",
                  "runAfter": {
                    "SelectAttachmentProperties": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "SelectAttachmentProperties": {
                  "inputs": {
                    "from": "@body('KpnsnTableGet')['result']",
                    "select": {
                      "content_type": "@item()?['content_type']",
                      "download_link": "@item()?['download_link']",
                      "file_name": "@item()?['file_name']",
                      "size_bytes": "@item()?['size_bytes']"
                    }
                  },
                  "runAfter": {},
                  "type": "Select"
                }
              },
              "else": {
                "actions": {
                  "EmptyArrayResponse": {
                    "inputs": {
                      "body": "@json('[]')",
                      "headers": {
                        "AppRunlink": "@{concat('https://portal.azure.com/#view/Microsoft_Azure_EMA/DesignerEditor.ReactView/id/%2Fsubscriptions%2F', parameters('subscriptionId'),'%2FresourceGroups%2F{{resourceGroup}}%2Fproviders%2FMicrosoft.Web%2Fsites%2F{{logicappName}}%2Fworkflows%2F',workflow()?['name'],'/location/West%20Europe/isReadOnly/true/isMonitoringView/true/runId/',workflow()?['run']?['name'])}"
                      },
                      "statusCode": 200
                    },
                    "kind": "Http",
                    "runAfter": {},
                    "type": "Response"
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "greater": [
                      "@length(body('KpnsnTableGet')['result'])",
                      0
                    ]
                  }
                ]
              },
              "runAfter": {
                "InitializeAttachmentsArray": [
                  "Succeeded"
                ]
              },
              "type": "If"
            },
            "CheckForTechnicalFailure": {
              "actions": {
                "FunctionalEndpointFailure": {
                  "inputs": {
                    "body": {
                      "code": "FunctionalEndpointFailure",
                      "message": "@body('KpnsnTableGet')['error']['message']",
                      "reference_number": "",
                      "state": "",
                      "sys_id": "",
                      "ticket_number": ""
                    },
                    "headers": {
                      "AppRunlink": "@{concat('https://portal.azure.com/#view/Microsoft_Azure_EMA/DesignerEditor.ReactView/id/%2Fsubscriptions%2F', parameters('subscriptionId'),'%2FresourceGroups%2F{{resourceGroup}}%2Fproviders%2FMicrosoft.Web%2Fsites%2F{{logicappName}}%2Fworkflows%2F',workflow()?['name'],'/location/West%20Europe/isReadOnly/true/isMonitoringView/true/runId/',workflow()?['run']?['name'])}"
                    },
                    "statusCode": 400
                  },
                  "kind": "Http",
                  "runAfter": {},
                  "type": "Response"
                }
              },
              "else": {
                "actions": {
                  "TechnicalFailureResponse": {
                    "inputs": {
                      "body": {
                        "code": "TechnicalEndpointFailure",
                        "message": "Original Endpoint Failure with StatusCode: @{outputs('KpnsnTableGet')?['statusCde']}\nError:@{outputs('KpnsnTableGet')?['body']} @{actions('KpnsnTableGet')?['error']?['message']}",
                        "reference_number": "",
                        "state": "",
                        "sys_id": "",
                        "ticket_number": ""
                      },
                      "headers": {
                        "AppRunlink": "@{concat('https://portal.azure.com/#view/Microsoft_Azure_EMA/DesignerEditor.ReactView/id/%2Fsubscriptions%2F', parameters('subscriptionId'),'%2FresourceGroups%2F{{resourceGroup}}%2Fproviders%2FMicrosoft.Web%2Fsites%2F{{logicappName}}%2Fworkflows%2F',workflow()?['name'],'/location/West%20Europe/isReadOnly/true/isMonitoringView/true/runId/',workflow()?['run']?['name'])}"
                      },
                      "statusCode": 500
                    },
                    "kind": "Http",
                    "runAfter": {},
                    "type": "Response"
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@outputs('KpnsnTableGet')?['statusCode']",
                      400
                    ]
                  }
                ]
              },
              "runAfter": {
                "KpnsnTableGet": [
                  "Failed",
                  "TimedOut"
                ]
              },
              "type": "If"
            },
            "EndRun": {
              "inputs": {
                "runStatus": "Succeeded"
              },
              "runAfter": {
                "CheckForTechnicalFailure": [
                  "Succeeded",
                  "Failed",
                  "TimedOut"
                ]
              },
              "type": "Terminate"
            },
            "InitializeAttachmentsArray": {
              "inputs": {
                "variables": [
                  {
                    "name": "attachments",
                    "type": "array"
                  }
                ]
              },
              "runAfter": {
                "KpnsnTableGet": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "KpnsnTableGet": {
              "inputs": {
                "authentication": {
                    "username": "@{parameters('serviceNowGreen')['userName']}",
                    "password": "@{parameters('serviceNowGreen')['secret']}",
                    "type": "Basic"
                },
                "headers": {
                  "Content-Type": "application/json",
                  "Connection": "close"
                },
                "method": "GET",
                "queries": {
                  "sysparm_limit": "@triggerBody()?['sysparm_limit']",
                  "sysparm_query": "@{concat(triggerBody()?['sysparm_query'], '^encryption_context=NULL^ORencryption_context=''')}"                },
                "retryPolicy": {
                  "type": "none"
                },
                "uri": "@concat(parameters('serviceNowGreen')['baseUrl'],'api/now/attachment')"
              },
              "runAfter": {},
              "trackedProperties": {
                "action": "GET",
                "extra_info": "@triggerbody()?['sysparm_query']",
                "process_type": "attachment",
                "source": "KPN-SNGR",
                "destination": "KPN-SNGR",
                "ticket_number": "",
                "reference_number": "",
                "runLink": "@{concat('https://portal.azure.com/#view/Microsoft_Azure_EMA/DesignerEditor.ReactView/id/%2Fsubscriptions%2F', parameters('subscriptionId'),'%2FresourceGroups%2F{{resourceGroup}}%2Fproviders%2FMicrosoft.Web%2Fsites%2F{{logicappName}}%2Fworkflows%2F',workflow()?['name'],'/location/West%20Europe/isReadOnly/true/isMonitoringView/true/runId/',workflow()?['run']?['name'])}"
              },
              "type": "Http"
            }
          },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "triggers": {
            "gen-kpnsngr-getatt-wf": {
                "inputs": {},
                "kind": "Http",
                "type": "Request"
            }
        }
    },
    "kind": "Stateful"
}